# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Build all services sequentially
      - name: Build ServiceRegistry (Eureka)
        working-directory: ./ServiceRegistry
        run: mvn -B clean package -DskipTests

      - name: Build ConfigServer
        working-directory: ./ConfigServer
        run: mvn -B clean package -DskipTests

      - name: Build ProductService
        working-directory: ./ProductService
        run: mvn -B clean package -DskipTests

      # Start Eureka Server
      - name: Start ServiceRegistry
        run: nohup java -jar ./ServiceRegistry/target/ServiceRegistry-0.0.1-SNAPSHOT.jar > serviceRegistry.log 2>&1 &

      - name: Wait for Eureka
        run: sleep 15

      # Start Config Server
      - name: Start ConfigServer
        run: nohup java -jar ./ConfigServer/target/ConfigServer-0.0.1-SNAPSHOT.jar > configServer.log 2>&1 &

      - name: Wait for ConfigServer
        run: sleep 15

      # Start Product Service
      - name: Start ProductService
        run: nohup java -jar ./ProductService/target/ProductService-0.0.1-SNAPSHOT.jar > productService.log 2>&1 &

      - name: Wait for ProductService
        run: sleep 15
